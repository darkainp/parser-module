{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red115\green167\blue78;\red208\green191\blue105;\red252\green106\blue93;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25395\c63013\c75478;\csgenericrgb\c44940\c65475\c30460;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c98912\c41558\c36568;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 void
\f1\b0 \cf4  \cf5 send\cf4 ()\
\{\
        match(TOKEN[sendToken]);\
        match(TOKEN[leftParenthesisToken]);\
        sendBody();\
        match(TOKEN[rightParenthesisToken]);\
        match(TOKEN[endOfLineToken]);\
\}\
\

\f0\b \cf2 void
\f1\b0 \cf4  \cf5 sendBody\cf4 ()\
\{\
    sendToken2();\
    
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[semiColonToken])\
    \{\
        match(TOKEN[semiolonToken]);\
        sendBody();\
    \}\
\}\

\f0\b \cf2 void
\f1\b0 \cf4  \cf5 sendTOken2\cf4 ()\
\{\
            
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[idToken]\
            \{\
                match(TOKEN[idToken]);\
                
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[leftParenthesisToken])\
                \{\
                    \cf6 // do array call\cf4 \
                    \
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4 \
                \{\
                    \cf6 // do id call\cf4 \
                \}\
                \
            \}\
    
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[callToken])\
               \{\
                call();\
            \}\
        
\f0\b \cf2 else
\f1\b0 \cf4 \
               litToken();\
\}\
\

\f0\b \cf2 void
\f1\b0 \cf4  litToken()\
               \{\
                \
                
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[stringLitToken])\
                \{\
                    match(TOKEN[stringLitToken]);\
                    \
                    
\f0\b \cf2 for
\f1\b0 \cf4 (
\f0\b \cf2 int
\f1\b0 \cf4  i = \cf7 0\cf4 ; i < curr_token.lexem.length(); i++)\
                    \{\
                        emit1(LDM1);\
                        emit1(curr_token.lexem[i]);\
                        emit1(OUTC);\
                    \}\
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[charLitToken])\
                \{\
                    match(TOKEN[charLitToken]);\
                    emit1(LDM1);\
                    emit1(curr_token.lexem);\
                    emit1(OUTC);\
                \}\
                \
                
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == TOKEN[intLitToken])\
                \{\
                    match(TOKEN[intLitToken]);\
                    emit4(LDM4);\
                    emit4 (stoi(curr_token.lexem));\
                    emit1(OUTI);\
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == boolLitToken)\
                \{\
                    match(TOKEN[boolLitToken]);\
                    emit1(LDM1);\
                    
\f0\b \cf2 if
\f1\b0 \cf4 (curr_token.lexem == \cf8 "YES"\cf4 )\
                    \{\
                        emit1(\cf7 1\cf4 );\
                    \}\
                    
\f0\b \cf2 else
\f1\b0 \cf4 \
                    emit1(\cf7 0\cf4 );\
                    emit1(OUTI);\
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == hexLitToken)\
                \{\
                    match(TOKEN[hexLitToken]);\
                    emit4(LDM4);\
                    emit4(stoi(curr_token.lexem));\
                    emit1(OUTI);\
                \}\
                
\f0\b \cf2 else
\f1\b0 \cf4  
\f0\b \cf2 if
\f1\b0 \cf4 (lookahead.name == realLitToken)\
                \{\
                    match(TOKEN[realLitToken]);\
                    emit4(LDM4);\
                    emit4 (unreal(stof(curr_token.lexem)));\
                    emit1(OUTR);\
                \}\
\}\
}